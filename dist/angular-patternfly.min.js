"use strict";angular.module("patternfly.autofocus",[]).directive("pfFocused",function($timeout){return{restrict:"A",link:function(scope,element,attrs){scope.$watch(attrs.pfFocused,function(newValue){$timeout(function(){newValue&&(element[0].focus(),element[0].select&&element[0].select())})})}}}),angular.module("patternfly.formgroup",[]).directive("pfFormGroup",function(){return{restrict:"E",transclude:!0,link:function(scope,element,attrs,ctrl,transclude){attrs.pfId||(attrs.pfId="pfID"+Math.floor(1e6*Math.random()+1)),attrs.pfLabelClass||(attrs.pfLabelClass="col-sm-2"),attrs.pfInputClass||(attrs.pfInputClass="col-sm-10"),element.append('<div class="form-group"><label class="control-label '+attrs.pfLabelClass+'" for="'+attrs.pfId+'">'+attrs.pfLabelText+'</label><div class="'+attrs.pfInputClass+'"></div></div>'),transclude(scope,function(clone){var transcludeDiv=angular.element(element.find("div").get(1));transcludeDiv.append(clone);var transcludeInput=angular.element(transcludeDiv.find("input").get(0));transcludeInput.addClass("form-control"),transcludeInput.attr("id",attrs.pfId)})}}}),angular.module("patternfly.notification",[]).factory("Notifications",function($rootScope,$timeout,$log){var delay=5e3,notifications={};$rootScope.notifications={},$rootScope.notifications.data=[],$rootScope.notifications.remove=function(index){$rootScope.notifications.data.splice(index,1)};var scheduleMessagePop=function(){$timeout(function(){$rootScope.notifications.data.splice(0,1)},delay)};return $rootScope.notifications||($rootScope.notifications.data=[]),notifications.message=function(type,header,message){$rootScope.notifications.data.push({type:type,header:header,message:message}),scheduleMessagePop()},notifications.info=function(message){notifications.message("info","Info!",message),$log.info(message)},notifications.success=function(message){notifications.message("success","Success!",message),$log.info(message)},notifications.error=function(message){notifications.message("danger","Error!",message),$log.error(message)},notifications.warn=function(message){notifications.message("warning","Warning!",message),$log.warn(message)},notifications.httpError=function(message,httpResponse){message+=" ("+(httpResponse.data.message||httpResponse.data.cause||httpResponse.data.cause||httpResponse.data.errorMessage)+")",notifications.message("danger","Error!",message),$log.error(message)},notifications}).directive("pfNotification",function(){return{scope:{pfNotificationType:"=",pfNotificationMessage:"=",pfNotificationHeader:"="},restrict:"E",template:'<div class="alert alert-{{pfNotificationType}}" ng-click="notifications.remove($index)"><span class="pficon pficon-ok" ng-show="pfNotificationType == \'success\'"></span><span class="pficon pficon-info" ng-show="pfNotificationType == \'info\'"></span><span class="pficon-layered" ng-show="pfNotificationType == \'danger\'"><span class="pficon pficon-error-octagon"></span><span class="pficon pficon-error-exclamation"></span></span><span class="pficon-layered" ng-show="pfNotificationType == \'warning\'"><span class="pficon pficon-warning-triangle"></span><span class="pficon pficon-warning-exclamation"></span></span><strong>{{pfNotificationHeader}}</strong> {{pfNotificationMessage}}</div>'}}).directive("pfNotificationList",function(){return{restrict:"E",template:'<div data-ng-show="notifications.data.length > 0"><div ng-repeat="notification in notifications.data"><pf-notification pf-notification-type="notification.type" pf-notification-header="notification.header" pf-notification-message="notification.message"></pf-notification></div></div>'}}),angular.module("patternfly.select",[]).directive("pfSelect",function($timeout){return{restrict:"A",require:"?ngModel",link:function(scope,element,attrs,ngModel){if(element.selectpicker(),ngModel.$render=function(){$timeout(function(){element.selectpicker("refresh")},0,!1)},attrs.ngOptions){var optionCollectionList=attrs.ngOptions.split("in "),optionCollection=optionCollectionList[optionCollectionList.length-1];scope.$watch(optionCollection,function(){element.selectpicker("refresh")})}attrs.$observe("disabled",function(){element.selectpicker("refresh")})}}}),angular.module("patternfly.validation",[]).directive("pfValidation",function($timeout){return{restrict:"A",require:"ngModel",scope:{pfValidation:"&",pfValidationDisabled:"="},link:function(scope,element,attrs,ctrl){function validate(){var val=scope.inputCtrl.$modelValue,valFunc=scope.pfValidation({input:val});attrs.pfValidation||(valFunc=!0);var valid=!val||valFunc||""===val;toggleErrorClass(scope.valEnabled&&!valid?!0:!1)}function toggleErrorClass(add){var messageElement=element.next(),parentElement=element.parent(),hasErrorM=parentElement.hasClass("has-error"),wasHidden=messageElement.hasClass("ng-hide");add&&(hasErrorM||parentElement.addClass("has-error"),wasHidden&&messageElement.removeClass("ng-hide")),add||(hasErrorM&&parentElement.removeClass("has-error"),wasHidden||messageElement.addClass("ng-hide"))}scope.inputCtrl=ctrl,scope.valEnabled=!attrs.pfValidationDisabled,scope.$watch("pfValidationDisabled",function(newVal){scope.valEnabled=!newVal,newVal?(scope.inputCtrl.$setValidity("pfValidation",!0),toggleErrorClass(!1)):validate()}),attrs.pfValidation?$timeout(function(){validate()},0):!scope.inputCtrl.$valid&&scope.inputCtrl.$dirty&&toggleErrorClass(!0),scope.$watch("inputCtrl.$valid",function(isValid){toggleErrorClass(isValid?!1:!0)}),scope.$watch("inputCtrl.$modelValue",function(){validate()})}}});